version: 2.1
jobs:
  build:
    docker:
      - image: circleci/php:7.4-node-browsers
    steps:
      - checkout
      - restore_cache:
          key: composer-v2-{{ checksum "src/composer.lock" }}
      - run:
          working_directory: src
          command: composer install -n --prefer-dist
      - save_cache:
          key: composer-v2-{{ checksum "src/composer.lock" }}
          paths:
            - src/vendor 
      - restore_cache:
          key: npm-v2-{{ checksum "src/package-lock.json" }}
      - run:
          working_directory: src
          name: npm ci
          # node_modulesが存在していない場合はnpm ciを実行する
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v2-{{ checksum "src/package-lock.json" }}
          paths:
            # - $HOME/.npm
            - src/node_modules
      - run:
          working_directory: src
          command: npm run dev
      # - run: php ./src/artisan --env=testing
      # - run: php ./src/vendor/bin/phpunit --configuration=./src/phpunit.xml
      - run:
          working_directory: src
          name: php test
          command: vendor/bin/phpunit tests

#   deploy:
#     docker:
#       - image: circleci/php:7.4.1-node-browsers
#     steps:
#       - add_ssh_keys
#       - run:
#           name: deploy
#           command: |
#             ssh -o StrictHostKeyChecking=no -t webapp@${HOST_NAME} "cd laravel-ci && \
#               git pull origin main && \
#               composer install -n --no-dev --prefer-dist && \
#               npm ci && \
#               npm run prod && \
#               cd src && \
#               php artisan migrate --force && \
#               php artisan config:cache"

# workflows:
#   version: 2
#   build_deploy:
#     jobs:
#       - build
#       - deploy:
#           requires:
#             - build
#           filters:
#             branches:
#               only:
#                 - main

  deploy:
    docker:
      - image: circleci/php:7.4.1-node-browsers
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
    steps:
      - checkout
      - run: sudo composer self-update
      - restore_cache:
          key: composer-no-dev-v2-{{ checksum "src/composer.lock" }}
      - run: 
          working_directory: src
          command: composer install -n --no-dev --prefer-dist
      - save_cache:
          key: composer-no-dev-v2-{{ checksum "src/composer.lock" }}
          paths:
            - src/vendor
      - restore_cache:
          key: npm-v2-{{ checksum "src/package-lock.json" }}
      - run:
          working_directory: src
          name: npm ci
          command: |
            if [ ! -d node_modules ]; then
              npm ci
            fi
      - save_cache:
          key: npm-v2-{{ checksum "src/package-lock.json" }}
          paths:
            # - $HOME/.npm
            - src/node_modules
      - run: 
          working_directory: src
          command: npm run prod
      # - run:
      #     working_directory: src
      #     name: archive artifacts
      #     command: zip -ryq laravel-ci.zip .
      - aws-cli/install
      # - run:
      #     name: upload artifacts to s3
      #     command: aws s3 cp laravel-ci.zip s3://${AWS_S3_BUCKET_NAME}
      - run:
          name: deploy to prod
          command: |
              cd src && \
              php artisan migrate --force && \
              php artisan config:cache"
          # command: |
          #   aws deploy create-deployment \
          #   --application-name laravel-ci \
          #   --deployment-group-name laravel-ci \
          #   --s3-location bucket=${AWS_S3_BUCKET_NAME},key=spoily-ci.zip,bundleType=zip

orbs:
  aws-cli: circleci/aws-cli@1.0.0
workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main